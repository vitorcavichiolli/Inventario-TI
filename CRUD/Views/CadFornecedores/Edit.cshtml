@{
    ViewBag.Title = "Editar Fornecedor";
}

@model Dominios.crud.TbFornecedores

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string retorno = ViewBag.Result;
    switch (retorno)
    {
        case "ok":
            <div class="modal modal-success fade" id="modal-confirm">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Registro editado com sucesso!</h4>
                        </div>
                        <div class="modal-body">
                            <p>O usuário @Model.Nome, id @Model.Id foi editado corretamente!</p>
                        </div>
                        <div class="modal-footer">
                            <a href="@Url.Action("Index")" class="btn btn-success">OK</a>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                $(document).click(function (e) {
                    if (!($(e.target).closest('.modal-content')).length) {
                        if ($('#modal-confirm').css('display') == 'block') {
                            window.location.href = '@Url.Action("Index")';
                        }
                    }
                });
            </script>
            break;
        case "ng":
            <div class="modal modal-danger fade" id="modal-confirm">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Erro ao editar registro!</h4>
                        </div>
                        <div class="modal-body">
                            <p>O usuário @Model.Nome, id @Model.Id não foi editado corretamente!</p>
                            <br />
                            <p>Detalhes:</p>
                            <p>@ViewBag.Ex</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>
                        </div>
                    </div>
                </div>
            </div>

            break;
    }
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.DataCadastro)
    @Html.HiddenFor(m => m.Id)

    <section>
        <div class="Box Box-default"></div>
        <div class="Box-header with-border">
            <b>Editar Registro</b>
        </div>

        <div class="Box-body">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.Razao, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => m.Razao, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase", @placeholder = "Razão Social" } })
                        @Html.ValidationMessageFor(m => m.Razao, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.Nome, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => m.Nome, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase", @placeholder = "Nome Fantasia" } })
                        @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(m => m.CNPJ, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => m.CNPJ, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase", @placeholder = "CNPJ" } })
                        @Html.ValidationMessageFor(m => m.CNPJ, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="box-footer">

            <div class="pull-right">
                <a class="btn btn-default" href="@Url.Action("Index")"><span class="glyphicon glyphicon-hand-left"></span> Voltar</a>
                <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-check"></span> Salvar</button>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>

        </div>
    </section>



    <link href="~/Content/iao-alert.css" rel="stylesheet" />
    <script src="~/Scripts/iao-alert.jquery.js"></script>

}

<script>
    $(document).ready(function () {
        $('#modal-confirm').modal("show");
        $("#CNPJ").attr('maxlength', '14');
    });

    $(document).on("keyup", "#CNPJ", function (e) {
        var text = $('#CNPJ').val();
        text = text.replace(/[^a-z0-9]/g, "");
        $('#CNPJ').val(text);
        $("#CNPJ").attr('maxlength', '14');
        if (text.length == 14) {
            $("#CNPJ").attr('maxlength', '18');
            text = cnpj(text);
            $('#CNPJ').val(text);
        }
    });

    function cnpj(doc) {
        doc = doc.replace(/\D/g, "");
        doc = doc.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})$/, "$1.$2.$3/$4-$5");
        return doc;
    }

    $("#CNPJ").focusout(function () {
        var validacao = isCnpj($("#CNPJ").val());
        console.log(validacao);
        if (validacao == false) {
            $("#CNPJ").val("");
            $.iaoAlert({
                msg: "<span><p class='glyphicon glyphicon-warning-sign'></p></span> CNPJ inválido!",
                type: "error",
                mode: "dark",
                autoHide: true,
                alertTime: "3000",
                fadeTime: "500",
                closeButton: true,
                closeOnClick: false,
                position: 'bottom-right',
                fadeOnHover: true,
                roundedCorner: true,
                zIndex: '9999'
            });
        }
    });

    function isCnpj(cnpj) {
        cnpj = cnpj.replace(/[^\d]+/g, '');

        if (cnpj == '') return false;

        if (cnpj.length != 14)
            return false;

        if (cnpj == "00000000000000" ||
            cnpj == "11111111111111" ||
            cnpj == "22222222222222" ||
            cnpj == "33333333333333" ||
            cnpj == "44444444444444" ||
            cnpj == "55555555555555" ||
            cnpj == "66666666666666" ||
            cnpj == "77777777777777" ||
            cnpj == "88888888888888" ||
            cnpj == "99999999999999")
            return false;

        tamanho = cnpj.length - 2
        numeros = cnpj.substring(0, tamanho);
        digitos = cnpj.substring(tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0))
            return false;

        tamanho = tamanho + 1;
        numeros = cnpj.substring(0, tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;

        return true;
    }
</script>